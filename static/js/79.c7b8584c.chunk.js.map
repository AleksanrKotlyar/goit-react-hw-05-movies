{"version":3,"file":"static/js/79.c7b8584c.chunk.js","mappings":"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","sources":["Utils/Box.jsx","components/MoviesReviews/MoviesReviews.styled.jsx","components/MoviesReviews/MoviesReviews.jsx","servises/APImovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { color, space, layout, flexbox, border } from 'styled-system';\n\nexport const Box = styled('div')(color, space, layout, flexbox, border);\n","import styled from 'styled-components';\n\nexport const Item = styled('li')`\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const Paragraf = styled('p')`\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n","import { searchReviews } from 'servises/APImovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box } from 'Utils/Box';\nimport { Item, Paragraf } from 'components/MoviesReviews/MoviesReviews.styled';\nimport toast from 'react-hot-toast';\n\nconst MoviesReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const searchReviewsMovie = await searchReviews(movieId);\n        setReviews(searchReviewsMovie);\n      } catch (error) {\n        toast(`${error}`, {\n          duration: 1000,\n          position: 'top-right',\n          style: { 'background-color': 'red' },\n        });\n      }\n    })();\n  }, [movieId]);\n\n  if (!reviews) return;\n  return (\n    <Box as=\"ul\" bg=\"#ff990030\" p=\"8px\">\n      {reviews?.map(({ id, author, content }) => (\n        <Item key={id}>\n          <Paragraf>\n            <b>Author: {author} </b>\n          </Paragraf>\n          <Paragraf>{content}</Paragraf>\n        </Item>\n      ))}\n    </Box>\n  );\n};\n\nexport default MoviesReviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a3dd0056fa523609f3ab9fe8602576dd';\n\nasync function fetchGenres() {\n  if (localStorage.getItem('genresDataArray' !== null)) {\n    return;\n  }\n  try {\n    const genresDataArray = await axios.get(\n      `/genre/movie/list?language=en-US&api_key=${API_KEY}`\n    );\n    if (genresDataArray.status !== 200) {\n      return;\n    }\n\n    localStorage.setItem(\n      'genresDataArray',\n      JSON.stringify(genresDataArray.data.genres)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getTrending() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchMovies(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchMoviesByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query='${query}'`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport {\n  fetchGenres,\n  getTrending,\n  searchMovies,\n  searchMoviesByQuery,\n  searchCast,\n  searchReviews,\n};\n"],"names":["Box","styled","color","space","layout","flexbox","border","Item","p","theme","Paragraf","movieId","useParams","useState","reviews","setReviews","useEffect","searchReviews","searchReviewsMovie","toast","duration","position","style","as","bg","map","id","author","content","axios","API_KEY","fetchGenres","localStorage","getItem","genresDataArray","status","setItem","JSON","stringify","data","genres","console","log","getTrending","response","results","error","searchMovies","searchMoviesByQuery","query","searchCast","movie_id","cast"],"sourceRoot":""}