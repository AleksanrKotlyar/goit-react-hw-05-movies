{"version":3,"file":"static/js/92.1ef6079d.chunk.js","mappings":"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","sources":["Utils/Box.jsx","components/MovieInfo/MovieInfo.jsx","page/MovieDetails.jsx","servises/APImovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { color, space, layout, flexbox, border } from 'styled-system';\n\nexport const Box = styled('div')(color, space, layout, flexbox, border);\n","import { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { searchMovies } from 'servises/APImovies';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Box } from '../../Utils/Box';\nimport { Circles } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\nimport {\n  WrapSpinner,\n  CustLink,\n  CustP,\n  Title,\n  BackButton,\n} from './MovieInfo.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieInfo = () => {\n  const genre = JSON.parse(localStorage.getItem('genresDataArray'));\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const CustomNavigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const searchMovie = await searchMovies(movieId);\n        setMovie(searchMovie);\n      } catch (error) {\n        toast(`${error}`, {\n          duration: 1000,\n          position: 'top-right',\n          style: { 'background-color': 'red' },\n        });\n      }\n    })();\n  }, [movieId]);\n\n  if (!movie) return;\n\n  let gen = movie.genres\n    .reduce((acc, item) => {\n      genre.forEach(genreItem => {\n        if (item.id === genreItem.id) {\n          acc.push([genreItem.name]);\n        }\n      });\n      return acc;\n    }, [])\n    .join(', ');\n\n  let pict = '';\n  if (movie.poster_path === null) {\n    pict =\n      'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n  } else pict = `${BASE_URL}${movie.poster_path}`;\n\n  function addAudit(data) {\n    if (!data) {\n      // if (data.length === 0) {\n      return 'No information';\n    }\n    return data;\n  }\n\n  const handleGoBack = () => {\n    const backLinkHref = location.state?.from ?? '/';\n\n    CustomNavigate(backLinkHref);\n  };\n\n  const { title, release_date, vote_average, overview } = movie;\n\n  return (\n    <main>\n      <BackButton type=\"button\" onClick={handleGoBack}>\n        Go back\n      </BackButton>\n\n      {movie && (\n        <>\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"space-between\"\n            mt={5}\n            mb={5}\n            height=\"250px\"\n          >\n            <img src={`${pict}`} width=\"250px\" height=\"330px\" alt=\"film__img\" />\n            <Box ml={4}>\n              <Title>\n                {title} ({release_date?.slice(0, 4)})\n              </Title>\n              <CustP>\n                User Score: {`${addAudit(Number(vote_average).toFixed(1))}`}\n              </CustP>\n              <CustP>\n                <b>Overview:</b>\n                <br />\n                {`${addAudit(overview)}`}\n              </CustP>\n              <CustP>\n                <b>Genres:</b>\n                <br />\n                {`${addAudit(gen)}`}\n              </CustP>\n            </Box>\n          </Box>\n\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <CustLink to=\"cast\" state={location.state}>\n                Cast\n              </CustLink>\n            </li>\n            <li>\n              <CustLink to=\"reviews\" state={location.state}>\n                Reviews\n              </CustLink>\n            </li>\n          </ul>\n          <hr />\n          <Suspense\n            fallback={\n              <WrapSpinner>\n                <Circles\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#ff6b08\"\n                  ariaLabel=\"circles-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass=\"\"\n                  visible={true}\n                />\n              </WrapSpinner>\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieInfo;\n","import MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst MoviesDetails = () => {\n  return (\n    <>\n      <MovieInfo />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a3dd0056fa523609f3ab9fe8602576dd';\n\nasync function fetchGenres() {\n  if (localStorage.getItem('genresDataArray' !== null)) {\n    return;\n  }\n  try {\n    const genresDataArray = await axios.get(\n      `/genre/movie/list?language=en-US&api_key=${API_KEY}`\n    );\n    if (genresDataArray.status !== 200) {\n      return;\n    }\n\n    localStorage.setItem(\n      'genresDataArray',\n      JSON.stringify(genresDataArray.data.genres)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getTrending() {\n  try {\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchMovies(id) {\n  try {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchMoviesByQuery(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query='${query}'`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function searchReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport {\n  fetchGenres,\n  getTrending,\n  searchMovies,\n  searchMoviesByQuery,\n  searchCast,\n  searchReviews,\n};\n"],"names":["Box","styled","color","space","layout","flexbox","border","genre","JSON","parse","localStorage","getItem","useState","movie","setMovie","movieId","useParams","location","useLocation","CustomNavigate","useNavigate","useEffect","searchMovies","searchMovie","toast","duration","position","style","gen","genres","reduce","acc","item","forEach","genreItem","id","push","name","join","pict","poster_path","title","release_date","vote_average","overview","type","onClick","backLinkHref","state","from","display","flexDirection","alignItems","mt","mb","height","src","width","alt","ml","slice","addAudit","Number","toFixed","to","Suspense","fallback","ariaLabel","wrapperStyle","wrapperClass","visible","data","axios","API_KEY","fetchGenres","genresDataArray","status","setItem","stringify","console","log","getTrending","response","results","error","searchMoviesByQuery","query","searchCast","movie_id","cast","searchReviews"],"sourceRoot":""}